{
    "apps/env/DHT22Logger": [
        {
            "apps/env/DHT22Logger/DHT22logger.py": [
                "sensorReadings = subprocess.check_output(['sudo',adafruit,sensor,gpio])",
                "os.system(dumpcmd)",
                "sensorReadings = subprocess.check_output(['sudo',adafruit,sensor,gpio])",
                "os.system(dumpcmd)"
            ]
        }
    ],
    "apps/env/EmailiPhoneNetworkPresence.py": [
        {
            "apps/env/EmailiPhoneNetworkPresence.py": [
                "response = os.popen(\"sudo nmap -sP 192.168.2.1/24 | grep \" + IphoneMac + \" | awk '{print$3}' \",\"r\").readline()"
            ]
        }
    ],
    "apps/env/NetworkMonitoringWithAWSIoT.py": [
        {
            "apps/env/NetworkMonitoringWithAWSIoT.py": [
                "subprocess.Popen([\"wakeonlan\", mac])",
                "subprocess.Popen([\"wakeonlan\", mac])",
                "subprocess.Popen([\"wakeonlan\", mac])",
                "p = subprocess.Popen([\"arp\",\"-a\"],stdout=subprocess.PIPE,stderr=subprocess.PIPE)",
                "subprocess.Popen([\"net\", \"rpc\", \"shutdown\", \"-I\", ip, \"-U\", \"user%pass\"]) #For Windows PC, configure the actual username/password here",
                "subprocess.Popen([\"fping\", \"-c\", \"1\", \"-g\", \"192.168.1.0/24\"]) #Configure the actual subnet of network",
                "p = subprocess.Popen(['arp','-a'],stdout=subprocess.PIPE,stderr=subprocess.PIPE)",
                "p = subprocess.Popen([\"snmpwalk\",\"-v2c\",\"-c\",\"public\",\"192.168.1.1\",\".1.3.6.1.2.1.2.2.1.10\"],stdout=subprocess.PIPE,stderr=subprocess.PIPE)",
                "p = subprocess.Popen([\"snmpwalk\",\"-v2c\",\"-c\",\"public\",\"192.168.1.1\",\".1.3.6.1.2.1.2.2.1.10\"],stdout=subprocess.PIPE,stderr=subprocess.PIPE)",
                "p = subprocess.Popen([\"uptime\"],stdout=subprocess.PIPE,stderr=subprocess.PIPE)"
            ]
        }
    ],
    "apps/env/PiIndoorAirQualityMonitor": [
        {
            "apps/env/PiIndoorAirQualityMonitor/liv/livDB/temperatureHumiditySensor.py": [
                "subprocess.Popen([\"./timer.sh\"]);",
                "output = subprocess.check_output([\"./Adafruit_Python_DHT/examples/AdafruitDHT.py\", self.type, self.GPIO]);"
            ]
        }
    ],
    "apps/env/beerfridge": [
        {
            "apps/env/beerfridge/beerfridge.py": [
                "os.system('modprobe w1-gpio')",
                "os.system('modprobe w1-therm')",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)",
                "os.system('modprobe w1-gpio')",
                "os.system('modprobe w1-therm')",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)"
            ]
        },
        {
            "apps/env/beerfridge/beerfridge_make.py": [
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)"
            ]
        },
        {
            "apps/env/beerfridge/temperature_test.py": [
                "os.system('modprobe w1-gpio')",
                "os.system('modprobe w1-therm')"
            ]
        },
        {
            "apps/env/beerfridge/wiiboard_test.py": [
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)"
            ]
        }
    ],
    "apps/env/smartScale": [
        {
            "apps/env/smartScale/smartscale.py": [
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)"
            ]
        },
        {
            "apps/env/smartScale/wiiboard_test.py": [
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)",
                "subprocess.check_output([\"bluez-test-input\", \"disconnect\", address], stderr=subprocess.STDOUT)"
            ]
        }
    ],
    "apps/env/thermostatRaspBerryPi": [
        {
            "apps/env/thermostatRaspBerryPi/thermo.py": [
                "p = Popen(cmd, shell=True, stdout=PIPE, stderr=STDOUT)"
            ]
        }
    ]
}
